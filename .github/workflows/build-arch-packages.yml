name: Build Arch Linux Packages

# Trigger the workflow manually
on:
  workflow_dispatch:

jobs:
  build-packages:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up the output directory for built packages
      - name: Set Up Output Directory
        run: mkdir -p output

      # Step 3: Cache yay and dependencies to speed up builds
      - name: Cache yay and dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/yay
            /var/cache/pacman/pkg
          key: ${{ runner.os }}-yay-${{ hashFiles('list.txt') }}
          restore-keys: |
            ${{ runner.os }}-yay-

      # Step 4: Verify Docker is running
      - name: Verify Docker Service
        run: |
          docker info
          # Docker is pre-installed and should be running on ubuntu-latest

      # Step 5: Build Packages in Arch Linux Container without installing them
      - name: Build Packages in Arch Linux Container
        run: |
          # Pull the latest Arch Linux Docker image
          docker pull archlinux:latest

          # Run the Docker container
          docker run --rm \
            -v ${{ github.workspace }}:/repo \
            -v ${{ github.workspace }}/output:/output \
            archlinux:latest /bin/bash -c "
              set -e


              sed -i 's,exit $E_ROOT,echo but you know what you do,' /usr/bin/makepkg

              sed -i 's/SKIPPGPCHECK=0/SKIPPGPCHECK=1/' /usr/bin/makepkg


              # Update package lists and upgrade system
              pacman -Syu --noconfirm
              pacman-key --init

              # Install base development tools and Git
              pacman -S --noconfirm base-devel git wget

              # Add archlinuxcn repository to pacman.conf
              echo '[archlinuxcn]' >> /etc/pacman.conf
              echo 'Server = https://repo.archlinuxcn.org/\$arch' >> /etc/pacman.conf

              # Update package lists again to include archlinuxcn
              pacman -Syu --noconfirm

              # Import PGP Keys
              pacman -Sy --noconfirm archlinux-keyring
              pacman -S --noconfirm archlinuxcn-keyring

              # Refresh PGP keys
              pacman-key --populate archlinux
              pacman-key --populate archlinuxcn

              pacman -Syu --noconfirm

              # Navigate to the repository directory
              cd /repo

              # Read package names from list.txt and build them without installing
              while IFS= read -r package ; do
                echo \"Building package: \$package\"
                git clone https://aur.archlinux.org/\${package}.git
                cd \"\$package\"
                makepkg -si --noconfirm
                cp *.pkg.tar.zst /output/
                cd ..
              done < /repo/list.txt
            "

      # Step 6: Upload Built Packages as Artifacts
      - name: Upload Built Packages
        uses: actions/upload-artifact@v3
        with:
          name: built-packages
          path: output/*.pkg.tar.zst
